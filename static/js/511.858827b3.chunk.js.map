{"version":3,"file":"static/js/511.858827b3.chunk.js","mappings":"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","sources":["routers/main/components/upload.js","routers/main/components/fileList.js","routers/main/home.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Upload = (props) => {\r\n  const [file, setFile] = useState(null);\r\n  const [estimatedTime, setEstimatedTime] = useState('');\r\n  const [time,setTime]=useState(0)\r\n  const [bedTemperature, setBedTemperature] = useState(70);\r\n  const [nozzleTemperature, setNozzleTemperature] = useState(210);\r\n  const [fileSize, setFileSize] = useState(0);\r\n  const [fileName, setFileName] = useState('');\r\n\r\n  const handleFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    setFile(selectedFile);\r\n    setFileSize(selectedFile.size);\r\n    setFileName(selectedFile.name);\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = (event) => {\r\n      const fileContent = event.target.result;\r\n      const timeMatch = fileContent.match(/;TIME:(\\d+)/);\r\n\r\n      if (timeMatch) {\r\n        const timeInSeconds = parseInt(timeMatch[1], 10);\r\n        setEstimatedTime(formatTime(timeInSeconds));\r\n      }\r\n    };\r\n    reader.onerror = () => {\r\n      console.error('Error reading file.');\r\n    };\r\n    if (selectedFile) {\r\n      reader.readAsText(selectedFile);\r\n    }\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    setTime(seconds)\r\n    const hours = Math.floor(seconds / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    const remainingSeconds = seconds % 60;\r\n\r\n    if (hours > 0) {\r\n      return `${hours} giờ ${minutes} phút`;\r\n    } else if (minutes > 0) {\r\n      return `${minutes} phút ${remainingSeconds} giây`;\r\n    } else {\r\n      return `${remainingSeconds} giây`;\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) {\r\n      alert('Please select a file to upload.');\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = async (event) => {\r\n      const filee = event.target.result;\r\n      const fileContent = filee\r\n        .replace(/M140 S\\d+/g, `M140 S${bedTemperature}`)\r\n        .replace(/M104 S\\d+/g, `M104 S${nozzleTemperature}`);\r\nconst KB=Number((fileSize / 1024).toFixed(2))\r\n      // Gọi hàm props.setData để cập nhật dữ liệu\r\n      const userId=props.id\r\n      props.setData({fileContent, KB, time,userId,fileName});\r\n    };\r\n\r\n    reader.readAsText(file);\r\n \r\n  };\r\n\r\n  return (\r\n    <div className=\"absolute top-0 left-0 m-6 p-6 bg-white rounded-lg shadow-md\">\r\n  <input \r\n    type=\"file\" \r\n    accept=\".gcode\" \r\n    onChange={handleFileChange} \r\n    className=\"block w-full text-sm text-gray-900 border border-gray-300 rounded-lg cursor-pointer bg-gray-50 focus:outline-none\"\r\n  />\r\n  {estimatedTime && (\r\n    <p className=\"mt-2 text-sm text-gray-600\">Thời gian ước tính: {estimatedTime}</p>\r\n  )}\r\n  {fileSize > 0 && (\r\n    <p className=\"mt-2 text-sm text-gray-600\">Kích thước file: {(fileSize / 1024).toFixed(2)} KB</p>\r\n  )}\r\n  \r\n  <div className=\"mt-4\">\r\n    <label className=\"block text-sm font-medium text-gray-700\">\r\n      Nhiệt độ bàn in (°C):\r\n      <input \r\n        type=\"number\" \r\n        value={bedTemperature} \r\n        onChange={(e) => setBedTemperature(e.target.value)} \r\n        className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n      />\r\n    </label>\r\n  </div>\r\n\r\n  <div className=\"mt-4\">\r\n    <label className=\"block text-sm font-medium text-gray-700\">\r\n      Nhiệt độ đầu đùn (°C):\r\n      <input \r\n        type=\"number\" \r\n        value={nozzleTemperature} \r\n        onChange={(e) => setNozzleTemperature(e.target.value)} \r\n        className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n      />\r\n    </label>\r\n  </div>\r\n\r\n  <button \r\n    onClick={handleUpload} \r\n    className=\"mt-6 w-full inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n  >\r\n    Upload\r\n  </button>\r\n</div>\r\n\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n","import React from 'react'\r\n\r\nconst fileList = (props) => {\r\n    const formatTime = (seconds) => {\r\n        if (seconds < 0) {\r\n            return \"Đang chờ được xử lý\"; // Display message for negative waiting time\r\n        }\r\n        \r\n        const hours = Math.floor(seconds / 3600);\r\n        const minutes = Math.floor((seconds % 3600) / 60);\r\n        const secs = Math.ceil(seconds % 60);\r\n    \r\n        return `${hours} giờ ${minutes} phút ${secs} giây`;\r\n    };\r\n  return (\r\n    <div className=\"fixed top-4 right-2/4 space-y-4\">\r\n    {props.fileData?.fileList.map((file) => (\r\n        <div key={file.fileid} className=\"p-4 border rounded-lg shadow-md bg-white\">\r\n            <p className=\"font-semibold text-lg\">Tên file: <span className=\"font-normal\">{file.fileName}</span></p>\r\n            <p className=\"text-gray-600\">Thời gian chờ dự kiến: <span className=\"font-normal\">{formatTime(file.waitingTime)}</span></p>\r\n            <p className=\"text-gray-600\">\r\n                Số thứ tự: <span className=\"font-normal\">{file.index === 0 ? 'Đang in' : file.index}</span>\r\n            </p>\r\n        </div>\r\n    ))}\r\n</div>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default fileList","import { useEffect,useState } from 'react';\r\nimport * as Realm from 'realm-web';\r\nimport Upload from './components/upload';\r\nimport FileList from './components/fileList';\r\nconst app = new Realm.App({ id: process.env.REACT_APP_REALM_ID });\r\nconst Home = () => {\r\n  const [data,setData]=useState('')\r\n  const [fileData,setFileData]=useState(null)\r\n  useEffect(() => {\r\n    if(data!==''){\r\n    Uploadfile()\r\n      \r\n  }\r\n    fetchData();\r\n  }, [data,fileData]);\r\n  \r\nconst fetchData  = async ()=>{\r\n  const functionName2 = \"userfile\";\r\n\r\n  try {\r\n    await app?.currentUser?.refreshAccessToken();\r\n   \r\n    console.log('đã refresh')\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n\r\n   const user=app.currentUser\r\n    if (!user||user.accessToken===\"\")\r\n    {\r\n       window.location.href =\"/3dauto/login\"\r\n    }else{\r\n      \r\n      try {\r\n        const result2= await app.currentUser.callFunction(functionName2);\r\n        setFileData(result2[0])\r\n    \r\n        console.log(result2[0])\r\n      } catch (error) {\r\n        console.log(error.error)\r\n      }\r\n    }\r\n}\r\nconst Uploadfile = async()=>{\r\n  const functionName = \"uploadfile\";\r\n\r\n  try {\r\n    const result= await app.currentUser.callFunction(functionName, data);\r\n   \r\n    \r\n     window.location.reload()\r\n  } catch (error) {\r\n    console.log(error.error)\r\n  }\r\n \r\n  \r\n}\r\nconst Logout = async ()=>{\r\n  await app.currentUser.logOut();\r\n  window.location.reload()\r\n}\r\n  return (\r\n    <div>\r\n          <Upload setData={setData} id={app.currentUser?.id}/>\r\n          <FileList fileData={fileData}/>\r\n          <button onClick={Logout}>logout</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["props","file","setFile","useState","estimatedTime","setEstimatedTime","time","setTime","bedTemperature","setBedTemperature","nozzleTemperature","setNozzleTemperature","fileSize","setFileSize","fileName","setFileName","formatTime","seconds","hours","Math","floor","minutes","remainingSeconds","concat","_jsxs","className","children","_jsx","type","accept","onChange","e","selectedFile","target","files","size","name","reader","FileReader","onload","event","timeMatch","result","match","timeInSeconds","parseInt","onerror","console","error","readAsText","toFixed","value","onClick","async","alert","fileContent","replace","KB","Number","userId","id","setData","_props$fileData","secs","ceil","fileData","fileList","map","waitingTime","index","fileid","app","Realm","process","Home","_app$currentUser2","data","setFileData","useEffect","Uploadfile","fetchData","_app$currentUser","currentUser","refreshAccessToken","log","user","accessToken","result2","callFunction","window","location","href","reload","Upload","FileList","logOut"],"sourceRoot":""}