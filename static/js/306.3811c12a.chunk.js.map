{"version":3,"file":"static/js/306.3811c12a.chunk.js","mappings":"6LAMA,MAAMA,EAAM,IAAIC,EAAAA,GAAU,CAAEC,GAAIC,sBA0GhC,EAxGcC,KACZ,MAAOC,EAAGC,IAAQC,EAAAA,EAAAA,WAAS,IACpBC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,KAC5BG,EAAWC,IAAgBJ,EAAAA,EAAAA,WAAS,GAWrCK,EAAW,CACf,yBAA0B,CACxB,MAAS,CACP,SAAYF,GAEd,UAAY,EACZ,WAAc,6BAoClB,OACEG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,UAChCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,SAExBV,GACCW,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAF,SAAA,EACEF,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CACHC,OA1DG,CACbC,KAAM,SACNC,SAAU,CAAC,QAAS,YACpBC,WAAY,CACVd,MAAO,CAAEY,KAAM,SAAUG,MAAO,mCAChCC,SAAU,CAAEJ,KAAM,SAAUG,MAAO,qBAAYE,OAAQ,cAsD/CC,UAAWA,EAAAA,GACXd,SAAUA,EACVe,SA1CKC,UAAyB,IAAlB,SAAEC,GAAUC,EAClCnB,GAAa,GACb,MAAM,MAAEH,EAAK,SAAEgB,GAAaK,EACtBE,EAAc9B,EAAAA,GAAkB+B,cAAcxB,EAAOgB,GAE3D,UACOxB,EAAIiC,MAAMF,GAGXG,OAAOC,SAASC,KAAM,SAE5B,CAAE,MAAOC,GACPC,QAAQC,IAAIF,EACd,CAAC,QACC1B,GAAa,EACf,GA4BU6B,SAAU9B,KAEZM,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAAE,SAAI,iCACJF,EAAAA,EAAAA,KAAA,KAEE4B,QAASA,IAAMnC,GAAK,GAAOS,SAC5B,wDAIHF,EAAAA,EAAAA,KAAA,KAAG4B,QAASA,IAAMP,OAAOC,SAASC,KAAM,mBAAmBrB,SAAC,+CAG9DC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAAE,UACEC,EAAAA,EAAAA,MAAA,QAAMW,SAzCGC,UACnBc,EAAMC,iBACNhC,GAAa,GAEb,UACQX,EAAI4C,kBAAkBC,uBAAuB,CAAErC,UACrDsC,MAAM,wFACR,CAAE,MAAOT,GACPC,QAAQC,IAAIF,EACd,CAAC,QACC1B,GAAa,EACf,GA8BuCI,SAAA,EAC3BC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,UAELF,EAAAA,EAAAA,KAAA,SACEO,KAAK,QACL2B,MAAOvC,EACPwC,SAAWN,GAAUjC,EAASiC,EAAMO,OAAOF,OAC3CP,SAAU9B,QAGdG,EAAAA,EAAAA,KAAA,UAAQO,KAAK,SAASoB,SAAU9B,EAAUK,SAAC,iBAG/CF,EAAAA,EAAAA,KAAA,KAAI4B,QAASA,IAAMnC,GAAK,GAAMS,SAAC,qDAIjC,C","sources":["routers/main/login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Form from '@rjsf/core';\r\nimport validator from '@rjsf/validator-ajv8';\r\nimport * as Realm from 'realm-web';\r\nimport './Login.css'; // Import CSS file\r\n\r\nconst app = new Realm.App({ id: process.env.REACT_APP_REALM_ID });\r\n\r\nconst Login = () => {\r\n  const [e, setE] = useState(true);\r\n  const [email, setEmail] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const schema = {\r\n    type: 'object',\r\n    required: ['email', 'password'],\r\n    properties: {\r\n      email: { type: 'string', title: 'Tên đăng nhập' },\r\n      password: { type: 'string', title: 'Mật khẩu', format: 'password' }\r\n    }\r\n  };\r\n\r\n  const uiSchema = {\r\n    \"ui:submitButtonOptions\": {\r\n      \"props\": {\r\n        \"disabled\": isLoading, // Disable submit button when loading\r\n      },\r\n      \"norender\": false,\r\n      \"submitText\": \"Đăng nhập\",\r\n    }\r\n  };\r\n\r\n  const onSubmit = async ({ formData }) => {\r\n    setIsLoading(true);\r\n    const { email, password } = formData;\r\n    const credentials = Realm.Credentials.emailPassword(email, password);\r\n    \r\n    try {\r\n     await app.logIn(credentials);\r\n    \r\n    \r\n          window.location.href =\"/3dauto\"// Đợi hàm này hoàn thành\r\n  \r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      await app.emailPasswordAuth.sendResetPasswordEmail({ email });\r\n      alert(\"Đã gửi email đặt lại mật khẩu thành công!\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='container-wrapper'>\r\n      <div className=\"containers\">\r\n\r\n        {e ? (\r\n          <>\r\n            <Form\r\n              schema={schema}\r\n              validator={validator}\r\n              uiSchema={uiSchema}\r\n              onSubmit={onSubmit}\r\n              disabled={isLoading}\r\n            />\r\n            <div >\r\n              <p >Quên mật khẩu?</p>\r\n              <p\r\n               \r\n                onClick={() => setE(false)}\r\n              >\r\n                Đặt lại mật khẩu ngay!\r\n              </p>\r\n            </div>\r\n            <p onClick={() => window.location.href ='/3dauto/register'}>Đăng ký tài khoản</p>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              <form onSubmit={handleSubmit}>\r\n                <label>\r\n                  Email:\r\n                  <input\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(event) => setEmail(event.target.value)}\r\n                    disabled={isLoading}\r\n                  />\r\n                </label>\r\n                <button type=\"submit\" disabled={isLoading}>Submit</button>\r\n              </form>\r\n            </div>\r\n            <p  onClick={() => setE(true)}>Trở lại đăng nhập</p>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["app","Realm","id","process","Login","e","setE","useState","email","setEmail","isLoading","setIsLoading","uiSchema","_jsx","className","children","_jsxs","_Fragment","Form","schema","type","required","properties","title","password","format","validator","onSubmit","async","formData","_ref","credentials","emailPassword","logIn","window","location","href","error","console","log","disabled","onClick","event","preventDefault","emailPasswordAuth","sendResetPasswordEmail","alert","value","onChange","target"],"sourceRoot":""}